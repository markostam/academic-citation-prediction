Integer Programming with a Fixed Number of Variables
Author(s): H. W. Lenstra, Jr.
Source: Mathematics of Operations Research, Vol. 8, No. 4 (Nov., 1983), pp. 538-548
Published by: INFORMS
Stable URL: http://www.jstor.org/stable/3689168
Accessed: 14/04/2009 06:14
Your use of the JSTOR archive indicates your acceptance of JSTOR's Terms and Conditions of Use, available at
http://www.jstor.org/page/info/about/policies/terms.jsp. JSTOR's Terms and Conditions of Use provides, in part, that unless
you have obtained prior permission, you may not download an entire issue of a journal or multiple copies of articles, and you
may use content in the JSTOR archive only for your personal, non-commercial use.
Please contact the publisher regarding any further use of this work. Publisher contact information may be obtained at
http://www.jstor.org/action/showPublisher?publisherCode=informs.
Each copy of any part of a JSTOR transmission must contain the same copyright notice that appears on the screen or printed
page of such transmission.
JSTOR is a not-for-profit organization founded in 1995 to build trusted digital archives for scholarship. We work with the
scholarly community to preserve their work and the materials they rely upon, and to build a common research platform that
promotes the discovery and use of these resources. For more information about JSTOR, please contact support@jstor.org.
INFORMS is collaborating with JSTOR to digitize, preserve and extend access to Mathematics of Operations
Research.
http://www.jstor.org
MATHEMATICS OF OPERATIONS RESEARCH 
Vol. 8, No. 4, November 1983 
Printed in U.S.A. 
INTEGER PROGRAMMING WITH A FIXED NUMBER 
OF VARIABLES* 
H. W. LENSTRA, JR. 
Universiteit van Amsterdam 
It is shown that the integer linear programming problem with a fixed number of variables is 
polynomially solvable. The proof depends on methods from geometry of numbers. 
The integer linear programming problem is formulated as follows. Let n and m be 
positive integers, A an m x n-matrix with integral coefficients, and b E Zm. The 
question is to decide whether there exists a vector x E Z" satisfying the system of m 
inequalities Ax < b. No algorithm for the solution of this problem is known which has 
a running time that is bounded by a polynomial function of the length of the data. This 
length may, for our purposes, be defined to be n m r log(a + 2), where a denotes the 
maximum of the absolute values of the coefficients of A and b. Indeed, no such 
polynomial algorithm is likely to exist, since the problem in question is NP-complete [3], 
[12]. 
In this paper we consider the integer linear programming problem with a fixed value 
of n. In the case n = 1 it is trivial to design a polynomial algorithm for the solution of 
the problem. For n = 2, Hirschberg and Wong [5] and Kannan [6] have given 
polynomial algorithms in special cases. A complete treatment of the case n = 2 was 
given by Scarf [10]. It was conjectured [5], [10] that for any fixed value of n there exists 
a polynomial algorithm for the solution of the integer linear programming problem. In 
the present paper we prove this conjecture by exhibiting such an algorithm. The degree 
of the polynomial by which the running time of our algorithm can be bounded is an 
exponential function of n. 
Our algorithm is described in ? 1. Using tools from geometry of numbers [1] we show 
that the problem can be transformed into an equivalent one having the following 
additional property: either the existence of a vector x E 7/ satisfying Ax < b is 
obvious; or it is known that the last coordinate of any such x belongs to an interval 
whose length is bounded by a constant only depending on n. In the latter case, the 
problem is reduced to a bounded number of lower dimensional problems. 
If in the original problem each coordinate of x is required to be in {0, 1}, no 
transformation of the problem is needed to achieve the condition just stated. This 
suggests that in this case our algorithm is equivalent to complete enumeration. We 
remark that the {0, 1} linear programming problem is NP-complete. 
In the general case we need two auxiliary algorithms for the construction of the 
required transformation. The first of these, which "remodels" the convex set {x E R": 
Ax < b}, is given in ?2. L. Lovasz observed that my original algorithm for this could 
be made polynomial even for varying n, by employing the polynomial solvability of 
the linear programming problem [8], [4]. I am indebted to Lovasz for permission to 
describe the improved algorithm in ?2. 
*Received November 13, 1981; revised July 2, 1982. 
AMS 1980 subject classification. Primary: 68C25; Secondary: 90C 10. 
OR/MS Index 1978 subject classification. Primary: 625 Programming/integer/algorithms. 
Key words. Integer programming, polynomial algorithm, geometry of numbers. 
538 
0364-765X/83/0804/0538$01.25 
Copyright ? 1983, The Institute of Management Sciences 
INTEGER PROGRAMMING WITH FIXED NUMBER OF VARIABLES 
The second auxiliary algorithm is a reduction process for n-dimensional lattices. 
Such an algorithm, also due to Lovaisz, appeared in [9, ? 1], and a brief sketch is given 
in ?3 of the present paper. This algorithm is polynomial even for varying n. It 
supersedes the much inferior algorithm that was described in an earlier version of this 
paper. 
In ?4 we prove, following a suggestion of P. van Emde Boas, that the integer linear 
programming problem with a fixed value of m is also polynomially solvable. This is an 
immediate consequence of our main result. 
?5 is devoted to the mixed integer linear programming problem. Combining our 
methods with Khachiyan's results [8], [4] we show that this problem is polynomially 
solvable for any fixed value of the number of integer variables. This generalizes both 
our main result and Khachiyan's theorem. 
The algorithms presented in this paper were designed for theoretical purposes only, 
and there are several modifications that might improve their practical performance. It 
is to be expected that the practical value of our algorithms is restricted to small values 
of n. 
It is a pleasure to acknowledge my indebtedness to P. van Emde Boas, not only for 
permission to include ?4, but also for suggesting the problem solved in this paper and 
for several inspiring and stimulating discussions. 
1. Description of the algorithm. Let K denote the closed convex set 
K= {xERn :Ax < b}. 
The question to be decided is whether K n Zn" = 0. In the description of the algorithm 
that follows, we make the following two simplifying assumptions about K: 
(1) K is bounded; 
(2) K has positive volume. 
The first assumption is justified by the following result, which is obtained by 
combining a theorem of Von zur Gathen and Sieveking [12] with Hadamard's 
determinant inequality (cf. (6) below): the set K n Z" is nonempty if and only if 
K n Zn contains a vector whose coefficients are bounded by (n + 1)n "/2a" in absolute 
value, where a is as in the introduction. Adding these inequalities to the system makes 
K bounded. 
For the justification of condition (2) we refer to ?2. Under the assumptions (1) and 
(2), ?2 describes how to construct a nonsingular endomorphism r of the vector space 
R", such that rK has a "spherical" appearance. More precisely, let | denote the 
Euclidean length in R", and put 
B(p,z)= {xE Rn :fx-pI < z} for p E R", zeR>0, 
the closed ball with center p and radius z. With this notation, the T constructed will 
satisfy 
B(p,r) c rK c B(p,R) (3) 
for some p E TK, with r and R satisfying 
r < cl, (4) 
where cl is a constant only depending on n. 
Let such a T be fixed, and put L = 7/". This is a lattice in R", i.e., there exists a basis 
b I,b2, . . , bn of R" such that 
n n 
L = 2 Zb= 2mibimi E Z (I < i <n). (5) i=1 i=l 
539 
H. W. LENSTRA, JR. 
We can take, for example, bi = r(ei), with ei denoting the ith standard basis vector of 
Rn. We call bl, b2 ... bn a basis for L if (5) holds. If bl, b, . .. , b is another basis 
for L, then b;, = _ . mybj for some n X n-matrix M=(mrn)l<,<, with integral 
coefficients and det(M)= ?1. It follows that the positive real number Idet(bl, 
b2, ... , bn)l (the bi being written as column vectors) only depends on L, and not on 
the choice of the basis; it is called the determinant of L, notation: d(L). We can 
interpret d(L) as the volume of the parallelepiped =1 [0, 1). bi, where [0, 1)= 
{z E R:0 < z < 1}. This interpretation leads to the inequality of Hadamard 
d(L) < f b,il. (6) 
i=1 
The equality sign holds if and only if the basis bI,b2,. . . bn is orthogonal. It is a 
classical theorem that L has a basis b,b2, . . ., b that is nearly orthogonal in the 
sense that the following inequality holds: 
l Ibi < c2 d(L) (7) 
where c2 is a constant only depending on n, cf. [1, Chapter VIII], [11]. In ?3 we shall 
indicate a reduction process, i.e., an algorithm that changes a given basis for L into one 
satisfying (7). 
LEMMA. Let b,,b2, . . ., bn be any basis for L. Then 
Vx E R: 3:y E L: Ix -y 2 < I (lb,2 + . + Ibn2). (8) 
PROOF. We use induction on n, the case n = 1 (or n = 0) being obvious. Let 
L' = En.7 Zbi; this is a lattice in the (n - l)-dimensional hyperplane H = E2-=1 Rb. 
Denote by h the distance of bn to H. Clearly we have 
h < Ibnl. (9) 
Now to prove (8), let x E R". We can find m E Z such that the distance of x - mbn to 
H is < I h. Write x - mb, = xl + x2, with x} E H and x2 perpendicular to H. Then 
Ix21 < ? h i 2 lbnl. By the induction hypothesis there exists y' E L' such that jx, -y12 
< I(lbl12 + * * + lb| 12). Since x2 is orthogonal toy, the element y = y + mb,, of L 
now satisfies Ix - y12 = Ix -_ y112 + lx2 < I(lb,1l2 + * * + lb 112 + l[bl2). This proves 
the lemma. 
Notice that the proof gives an effective construction of the element y E L that is 
asserted to exist. 
If we number the bi such that Ibnl = max{lbiI: 1 < i < n}, then (8) implies 
Vx E REn :3y EL :.x - yi < |flbnl. (10) 
Now assume that b1,b2 . . . b is a reduced basis for L in the sense that (7) holds, 
and let L' and h have the same meaning as in the proof of the lemma. It is easily seen 
that 
d(L) = h . d(L'). (11) 
From (7), (11) and (6), applied to L', we get 
nt1^1 < c, 
* 
d(L) =c, 'h * d{U) c, . /zn-I 
il tb< c2. d(L)= c2? h. d(L') < c2 h. h- Ib,il 
i-1 i=1 
540 
INTEGER PROGRAMMING WITH FIXED NUMBER OF VARIABLES 
and therefore, with (9): 
c/-'* Ibnl < h < Ibnl. (12) 
After these preparations we describe the procedure by which we decide whether 
K n Zn = 0 or, equivalently, TK n L = 0. We assume that b,b2, . . ., bn is a basis for 
L for which (7) holds, numbered such that IbjI = max(lbil: I < i < n}. 
Applying (10) with x =p we find a vectory E L with p - yI < Ib l. If y e rK 
then TK n L = 0, and we are done. Suppose therefore that y a rK. Then y 2 B(p, r), 
by (3), so Ip - Y > r, and this implies that r < nIbnI. Let now H, L', h have the 
same meaning as in the proof of the lemma. We have 
L = L'+ Zbn C H + b, = U (H + kbn). 
keZ 
Hence L is contained in the union of countably many parallel hyperplanes, which 
have successive distances h from each other. We are only interested in those hyper- 
planes that have a nonempty intersection with rK; these have, by (3), also a nonempty 
intersection with B(p, R). Suppose that precisely t of the hyperplanes H + kbn inter- 
sect B(p,R). Then we have clearly t - I < 2R/h. By (4) and (12) we have 
2R < 2rc, < c,n lbl h > c/\lbIl 
so t - I < clc2n. Hence the number of values for k that have to be considered is 
bounded by a constant only depending on n. Which values of k need be considered 
can easily be deduced from a representation of p as a linear combination of b,, 
b2 ... . bn. 
If we fix the value of k then we restrict attention to those x = I_ l yibi for which 
y, = k; and this leads to an integer programming problem with n - I variables 
Yl Y2 . .. Yn-i. It is straightforward to show that the length of the data of this new 
problem is bounded by a polynomial function of the length of the original data, if the 
directions of ?2 have been followed for the construction of r. 
Each of the lower dimensional problems is treated recursively. The case of dimen- 
sion n = 1 (or even n = 0) may serve as a basis for the recursion. This finishes our 
description of the algorithm. 
We observe that in the case that K n Z" is nonempty, our algorithm actually 
produces an element x E K n Z". 
2. The convex set K. Let K = {x E Rn: Ax < b}, and assume that K is bounded. 
In this section we describe an algorithm that can be used to verify that K satisfies 
condition (2) of ? 1; to reduce the number of variables if that condition is found not to 
be satisfied; and to find the map T used in ?1. The algorithm is better than what is 
strictly needed in ?1, in the sense that it is polynomial even for varying n. I am 
indebted to L. Lovasz for pointing out to me how this can be achieved. 
In the first stage of the algorithm one attempts to construct vertices v0, vI, . .. , vn of 
K whose convex hull is an n-simplex of positive volume. By maximizing an arbitrary 
linear function on K, employing Khachiyan's algorithm [8], [4], one finds a vertex v0 of 
K, unless K is empty. Suppose, inductively, that vertices vo, v, . . ., vd of K have been 
found for which v, - v0o, . . . , vd - v are linearly independent, with d < n. Then we 
can construct n - d linearly independent linear functions f, . . . fn_d on R" such that 
the d-dimensional subspace V = Ed_ I R(vj - V) is given by 
V= {x R :f,(x) /=f_-d(X) = 0}. 
541 
H. W. LENSTRA, JR. 
Again employing Khachiyan's algorithm, we maximize each of the linear functions 
fl-fli f2 -f2 *... * fn-d, -f-d on K, until a vertex vd+l of K is found for which 
j(vd+1) # f(vo) for somej E {1,2, . . . , n - d}. If this occurs, then vl - v0, . . , vd - 
v0, vd+ - vo are linearly independent, and the inductive step of the construction is 
completed. If, on the other hand, no such vd+ is found after each of the 2(n - d) 
functions fl, -fl, . ,-d, Jn-d has been maximized, then we must have fj(x) 
= fj(vo) for all x E K and all = 1,2, .... n - d, and therefore K c vo + V. In this 
case we reduce the problem to an integer programming problem with only d variables, 
as follows. 
Choose, forj = 1,2, . .., d, a nonzero scalar multiple wj of vj - v0 such that wj E Z, 
and denote by W the (n x d)-matrix whose columns are the wj. Notice that W has 
rank d. Employing the Hermite normal form algorithm of Kannan and Bachem [7] we 
can find, in polynomial time, an integral n x n-matrix U with det(U) = + 1 such that 
UW = (ki) <i <n, I j<d 
with 
f k,j =O if i> j, (C#O11~~~ for j~ ~(13) 
k,ii- 0 for 1 < i < d. 
Denote by u, u2, . . ., u the columns of the integral matrix U -'. These form a basis 
of Rn, and also of the lattice Z7: Zn = I,_ ZUL.. The subspace V of R" is generated by 
the columns of W = U -l (klj), so (13) implies that 
d 
V= E Ruj. (14) 
j= I 
Define r, r, . . , rrn E R by vo = EJ ru; so)S (j)'= UvO . 
Now suppose that x E K n 7Zn. Then x = j= I yjuj with yj Z, and x E K implies 
that x - v0 e V. By (14) this means that yj = rj for d < j < n. So if at least one of 
rd+ , . . ., rn is not an integer, then K n Z"n = 0. Suppose, therefore, that rd+, ..., r 
are all integral. Substituting x = 1 yjui + E=d+1 rjuj in our original system Ax < b 
we then see that the problem is equivalent to an integer programming problem with d 
variablesy, y 2, . . y, Y, as required. The vertices v0,, v.. . , vd of K give rise to d + 1 
vertices v,v', . . ., v, of the convex set in Rd belonging to the new problem, and 
V,, . . .. , v span a d-dimensional simplex of positive volume. This means that for 
the new, d-dimensional problem the first stage of the algorithm that we are describing 
can be bypassed. 
To conclude the first stage of the algorithm, we may now suppose that for each 
d = 0, 1, ..., n- 1 the construction of Vd+ I is successful. Then after n steps we have 
n + 1 vertices v0, v, . . ., vn of K for which vI - v0, . .., vn - v0 are linearly indepen- 
dent. The n-simplex spanned by Vo, vl .. .. , vn is contained in K, and its volume 
equals IdetMI/n! where M is the matrix with column vectors v, - v0, . . ., v - v0. 
This is positive, so condition (2) of ? 1 is satisfied. 
In the second stage of the algorithm we construct the coordinate transformation r 
needed in ? 1. To this end we first try to find a simplex of "large" volume in K. This is 
done by an iterative application of the following procedure, starting from the simplex 
spanned by v0,v, . . ., vn. The volume of that simplex is denoted by vol(vo, 
VI, * * ' , Vn)- 
Construct n + 1 linear functions go, g1, . . . gn: R" -- R such that 
g, is constant on { vj :0 < j < n, j i(, 
vj(t) + Jgi (ti) or 0< j < n i(15) 
gi(vi) ::# g (v/) for 0 < j < nJ i, 
542 
INTEGER PROGRAMMING WITH FIXED NUMBER OF VARIABLES 
for i = 0, 1, .. ., n. Maximizing the functions go, -go, gl, -g, .g . . gn, -gn on K by 
Khachiyan's algorithm we can decide whether there exist i E {0, 1, .. ., n} and a 
vertex x of K such that 
I gi(x - vj)I > 2 gi(vi - v)I 
for j = i (the choice of j is immaterial, by (15)). 
Suppose that such a pair i,x is found. Then we replace vi by x. This replacement 
enlarges vol(v0, vl, . . . , v) by a factor I gi(x - vj)l/I g(v - vj) (for j i), which is 
more than 3/2. We now return to the beginning of the procedure ("Construct n + 1 
linear functions . . . "). 
In every iteration step vol(vo, vl, . .. , vn) increases by a factor > 3/2. On the other 
hand, this volume is bounded by the volume of K. Hence after a polynomially 
bounded number of iterations we reach a situation in which the above procedure 
discovers that 
I g,(x - vj) < 2 gi(v - vj)l (16) 
for all xEK and all i,j E{0,1, ... , n with i/ j. In that case we let r be a 
nonsingular endomorphism of Rn with the property that (v0), (v), . . . , r(vn) span a 
regular n-simplex. With p = (n + l)-l_ 0'T(vj) we now claim that B(p,r) C TK 
C B(p,R) for certain positive real numbers r,R satisfying R/r < 2n3/2, i.e., that 
conditions (3) and (4) of ?1 are satisfied, with c, = 2n3/2. This finishes the description 
of our algorithm. 
To prove our claim, we write zj = Tr(vj), for 0 < j < n; we write S for the regular 
n-simplex spanned by zo,z, . . ., zn, and we define, for c > 1: 
Tc x (x E R :vol(zo 0, Zi-l ,x,zi+l,* . .,Zn) 
< c vol(zo, . . . ,zn) for all /iE {0,, . .. . , n)}. 
Condition (16) (for all x E K and all i j) means precisely that rK C T3/2. Further, it 
is clear that S c rK. Our claim now follows from the following lemma. 
LEMMA. Let c > 1. With the above notation we have B(p, r) C S C Tc C B(p, R) for 
two positive real numbers r, R satisfying 
R \2 c2n3+ (c2+ 1)n 
2 if n is even, 
r { c2n3 + (2C2- 2c + 1)n2 + (c2 - 2c)n if n is odd. 
PROOF. Using a similarity transformation we can identify Rn with the hyperplane 
{(_))J=o E R+l J~=0=' = 1} in Rn+l such that z0, Zl. . . ,z is the standard basis of 
Rn+ . Then we have 
n+ 1 j= n+ 1 'n+ 1 n+ 1 ' 
and 
Tc =(r)jo E Rn+' : lr < c for 0 < j < n, and 2 t) = 1). 
By a straightforward analysis one proves that TC is the convex hull of the set of points 
543 
H. W. LENSTRA, JR. 
obtained by permuting the coordinates of the point 
m n 
Zo-c 2 Z + c z; if n=2m, 
j=1 j=m+ 
m n 
(l-c)z0o-c zj+Cc if n=2m+ 1. 
j=l j=m+l 
It follows that T7 C B(p,R), where R is the distance of p to the above point: 
nc2 4- n if n is even, 
(n + )c2 - 2c + n if n is odd. 
Further, B(p,r) C S, where r is the distance of p to (0, I/n, 1/n. . . l/n): 
2 1 
n(n + 1) 
This proves the lemma. 
REMARKS. (a) To the construction of r in the above algorithm one might raise the 
objection that r need not be given by a matrix with rational coefficients. Indeed, for 
n = 2,4,5,6, 10,... there exists no regular n-simplex all of whose vertices have 
rational coordinates. This objection can be answered in several ways. One might 
replace the regular simplex by a rational approximation of it, or indeed by any fixed 
n-simplex with rational vertices and positive volume, at the cost of getting a larger 
value for cl. Alternatively, one might embed Rn in R"+ I, as was done in the proof of 
the lemma. Finally, it can be argued that it is not necessary that the matrix MT 
defining r be rational, but only the symmetric matrix M-TMT defining the quadratic 
form (TX, Tx); and this can easily be achieved in the above construction of T. 
(b) The proof that the algorithm described in this section is polynomial, even for 
varying n, is entirely straightforward. We indicate the main points. The construction of 
fl, ., f ,-d in the first stage, and of go, g . .  , g, in the second stage, can be done 
by Gaussian elimination, which is well known to be a polynomial algorithm, cf. [2, ?7]. 
It follows that Khachiyan's algorithm is only applied to problems whose lengths are 
bounded by a polynomial function of the length of the original data. The same applies 
to the d-dimensional integer programming problem constructed in the first stage. 
Further details are left to the reader. 
(c) We discuss to which extent the value 2n3/2 for cl in (4) is best possible. 
Replacing the coefficient 3/2 in (16) by other constants c > 1 we find, using the 
lemma, that for any fixed E > 0 we can take 
(1 + c)(n3 + 2n2)l/2 if n is even, 
l(1 + E)(n3 + n2- n) / if n is odd. 
If one is satisfied with an algorithm that is only polynomial for fixed n one can also 
take e = 0 in this formula. To achieve this, one uses a list of all vertices of K to find the 
simplex of maximal volume inside K, and transforms this simplex into a regular one. 
The following result shows that there is still room for improvement: if K c R" is any 
closed convex set satisfying (1) and (2) then there exists a nonsingular endomorphism r 
of R" such that (3) and (4) hold with cl = n. To prove this, one chooses an ellipsoid E 
inside K with maximal volume, and one chooses T such that rE is a sphere. The case 
that K is a simplex shows that the value c1 = n is best possible. For fixed n and E > 0 
there is a polynomial algorithm that achieves cl = (1 + E)n. I do not know how well 
the best possible value c, = n can be approximated by an algorithm that is polynomial 
for varying n. 
544 
INTEGER PROGRAMMING WITH FIXED NUMBER OF VARIABLES 
(d) The algorithm described in this section applies equally well to any class Y of 
compact convex bodies in Rn for which there exists a polynomial algorithm that 
maximizes linear functions on members K of S. This remark will play an important 
role in ?5. In particular, we can take for J' a "solvable" class of convex bodies, in the 
terminology of [4, ??1 and 3]. The same remark can be made for the algorithm 
presented in ?1. 
3. The reduction process. Let n be a positive integer, and let b ,b2, . ..b , bn R 
be n linearly independent vectors. Put L = En=, Zbi; this is a lattice in R". In this 
section we indicate an algorithm that transforms the basis bI, b2, ..., bn for L into one 
satisfying (7) with c2 = 2n(n- 1)/4. The algorithm is taken from [9, ?1], to which we refer 
for a more detailed description. 
We recall the Gram-Schmidt orthogonalization process. The vectors b* (1 < i < n) 
and the real numbers j0, (1 < j < i < n) are inductively defined by 
i-I 
b* = bi - 2 , i bj*, tuij = (bi, bj*)/(bj*, bf), j=l 
where ( , ) denotes the ordinary inner product on Rn. Notice that b* is the projection 
of bi on the orthogonal complement of ~-' Rbj, and that E~-' Rb = iij Rbj*, for 
1 < i < n. It follows that b*,b*, . . ., bn* is an orthogonal basis of Rn. The following 
result is taken from [9]. 
PROPOSITION. Suppose that 
uI i < 12 (17) 
for 1 j< j i < n, and 
Ib* + ii_lb I12 >Ibl* 112 (18) 
for 1 < i < n. Then 
n 
Li 2b n - 2 '>/4d(L), 
i=l 
i.e., (7) holds with c2 = 2n- /4. 
PROOF. See [9, Proposition 1.6]. 
To explain condition (18) we remark that the vectors b* + ti-, bi* and b*_1 are the 
projections of b, and b,_l on the orthogonal complement of EJ-2 Rbj. Hence if (18) 
does not hold for some i, then it does hold for the basis obtained from b, b2 . . ., bn 
by interchanging b_ - and bi. 
To change a given basis b, b2 . .. , b, for L into one satisfying (7) we may now 
iteratively apply the following transformations. 
First transformation: select i, 1 < i < n, such that (18) does not hold, and inter- 
change bi l and bi; 
Second transformation: select i, j, 1 < j < i < n, such that (17) does not hold, and 
replace bi by bi - rbj, where r is the integer nearest to /i,. 
It can be shown that, independently of the order in which these transformations are 
applied and independently of the choices of i, and of i and j, that are made, this leads 
after a finite number of steps to a basis b, b2, . . . , b satisfying (17) and (18). Then (7) 
is satisfied as well, by the proposition. This finishes our sketch of the algorithm. 
A particularly efficient strategy for choosing which transformation to apply, and for 
which i, or i and j, is described in [9, (1.15)]. If we assume the bi to have integer 
coordinates then the resulting algorithm is polynomial, even for varying n, by [9, 
Proposition 1.26]. It follows that the same result is true if we allow the coordinates of 
the bi to be rational. 
545 
H. W. LENSTRA, JR. 
REMARKS. (a) The algorithm sketched above can be used to find the shortest 
nonzero vector in L, in the following way. Suppose that bl, b2, . . ., bn is a basis for L 
satisfying (7), and let x E L. Then we can write x = ,= mibi with mi E Z, and from 
Cramer's rule it is easy to derive that }mil < c2- Ixl/lbi,I for 1 < i < n. If x is the 
shortest nonzero vector in L then Ix\ < Ibil for all i, so Imil < c2. So by searching the 
set {7_ mibi: mi E Z, Imi, < c2 for 1 < i < n} we can find the shortest nonzero 
vector in L in polynomial time, for fixed n. For variable n this problem is likely to be 
NP-hard. 
(b) We discuss to which extent our value for c2 is best possible. The above algorithm 
yields c2 = 2"(-1)/4. We indicate an algorithm that leads to a much better value for 
c2; but the algorithm is only polynomial for fixed n. 
In (a) we showed how to find the shortest nonzero vector in L by a search 
procedure. By an analogous but somewhat more complicated search procedure we can 
determine the successive minima I b',, I b, . . . ., Ib, of L (see [1, Chapter VIII] for the 
definition). Here b, b, . . ., bn E L are linearly independent, and by [1, Chapter VIII, 
Theorem I, p. 205 and Chapter IV, Theorem VII, p. 120] they satisfy 
n 
I !b[l < Yn/2 ' d(L) 
where yn denotes Hermite's constant [1, ?IX.7, p. 247], for which it is known that 
1 +o(l) < y/n < I +o(l) for n->oo. 2lre n ere 
Using a slight improvement of [1, Chapter V, Lemma 8, p. 135] we can change 
bi,b2, ..., bn into a basis b' ,b2' . . . b, for L satisfying 
b"I' < max{ 1, i} *b l' (1 < i < n) 
so 
n 
fI Ib'l < 2-n+2 (2n!)/2. Yn /2* d(L) (for n > 3). 
We conclude that, for fixed n, the basis bl,b2, . .. , bn produced by the algorithm 
indicated in this section can be used to find, in polynomial time, a new basis satisfying 
(7), but now with c2 = (c * n)". Here c denotes some absolute positive constant. 
On the other hand, the definition of yn implies that there exists an n-dimensional 
lattice L such that lxi > y,/2* d(L)'/" for all x E L, x #/ 0, cf. [1, Chapter I, Lemma 4, 
p. 21]. Any basis bl , b2, . . bn for such a lattice clearly satisfies 
n 
b Ibil > Yfn/2 . d(L). 
Therefore the best possible value for c2 satisfies c2 > (c' n),/2 for some absolute 
positive constant c'. 
4. A fixed number of constraints. In this section we show that the integer linear 
programming problem with a fixed value of m is polynomially solvable. It was noted 
by P. van Emde Boas that this is an immediate consequence of our main result. 
Let n, m,A,b be as in the introduction. We have to decide whether there exists 
x E Z'n for which Ax < b. Applying the algorithms of Kannan and Bachem [7] we can 
find an (n x n)-matrix U with integral coefficients and determinant ?+ 1 such that the 
matrix AU = (a,) <i<m< j<< j , satisfies a;,< = f 
546 
a, =0 for j> i. (19) 
INTEGER PROGRAMMING WITH FIXED NUMBER OF VARIABLES 
Putting y = U - x we see that the existence of x E Zn with Ax < b is equivalent to the 
existence of y E Z' with (A U)y < b. If n > m, then the coordinates Ym+, ..... Yn of y 
do not occir in these inequalities, since (19) implies that a, = 0 for j > m. We 
conclude that the original problem can be reduced to a problem with only min{n, m} 
variables. The latter problem is, for fixed m, polynomially solvable, by the main result 
of this paper. 
5. Mixed integer linear programming. The mixed integer linear programming prob- 
lem is formulated as follows. Let k and m be positive integers, and n an integer 
satisfying 0 < n < k. Let further A be an m x k-matrix with integral coefficients, and 
b E Zm. The question is to decide whether there exists a vector x = (xl,, . . ., x)T 
with 
xi EZ for 1 < i < n, 
xi, ER for n+ < i < k 
satisfying the system of m inequalities Ax < b. 
In this section we indicate an algorithm for the solution of this problem that is 
polynomial for any fixed value of n, the number of integer variables. This generalizes 
both the result of ?1 (n = k) and the result of Khachiyan [8], [4] (n = 0). 
Let 
K' = {x E Rk :Ax < b}, 
K= {(xI ,x2, . . ., xn) E Rn : there exist xn+, . . ., xk E R 
such that (xI ,x2 ...., xk) E K'}. 
The question is whether K n n1 = 0. 
Making use of the arguments of Von zur Gathen and Sieveking [12] we may again 
assume that K', and hence K, is bounded. Next we apply the algorithm of ?2 to the 
compact convex set K c R". To see that this can be done it suffices to show that we 
can maximize linear functions on K, see ?2, Remark (d). But maximizing linear 
functions on K is equivalent to maximizing, on K', linear functions that depend only 
on the first n coordinates xl,x2,..., xn; and this can be done by Khachiyan's 
algorithm. 
The rest of the algorithm proceeds as before. At a certain point in the algorithm we 
have to decide whether a given vector y E Rn belongs to rK. This can be done by 
solving a linear programming problem with k - n variables. This finishes the descrip- 
tion of the algorithm. 
As in ?4 it can be proved that the mixed integer linear programming problem is also 
polynomially solvable if the number of inequalities that involve one or more integer 
variables is fixed; or, more generally, if the rank of the matrix formed by the first n 
columns of A is bounded. 
References 
[1] Cassels, J. W. S. (1959). An Introduction to the Geometry of Numbers. Springer, Berlin. Second printing, 
1971. 
[2] Edmonds, J. (1967). Systems of Distinct Representatives and Linear Algebra. J. Res. Nat. Bur. 
Standards Sect. B 71B 241-245. 
[3] Garey, M. R. and Johnson, D. S. (1979). Computers and Intractability, A Guide to the Theory of 
NP-Completeness. Freeman & Co., San Francisco. 
[4] Grotschel, M., Lovasz, L. and Schrijver, A. (1981). The Ellipsoid Method and Its Consequences in 
Combinatorial Optimization. Combinatorica 1 169-197. 
[5] Hirschberg, D. S. and Wong, C. K. (1976). A Polynomial-time Algorithm for the Knapsack Problem 
with Two Variables. J. Assoc. Comput. Mach. 23 147-154. 
547 
548 H. W. LENSTRA, JR. 
[6] Kannan, R. (1980). A Polynomial Algorithm for the Two-variable Integer Programming Problem. 
J. Assoc. Comput. Mach. 27 118-122. 
[7] and Bachem, A. (1979). Polynomial Algorithms for Computing the Smith and Hermite Normal 
Forms of an Integer Matrix. SIAM J. Comput. 8 499-507. 
[8] Khachiyan, L. G. (1979). A Polynomial Algorithm in Linear Programming. Dokl. Akad. Nauk SSSR 
244 1093-1096 (English translation: Soviet Math. Dokl. 20 (1979), 191-194). 
[9] Lenstra, A. K., Lenstra, H. W., Jr. and Lovasz, L. (1982). Factoring Polynomials with Rational 
Coefficients. Math. Ann. 261 515-534. 
[10] Scarf, H. E. (1981). Production Sets with Indivisibilities-Part I: Generalities. Econometrica 49 1-32. 
Part II: The Case of Two Activities, ibid., 395-423. 
[11] Van der Waerden, B. L. (1956). Die Reduktionstheorie von positiven quadratischen Formen. Acta 
Math. 96 265-309. 
[12] Von zur Gathen, J. and Sieveking, M. (1978). A Bound on Solutions of Linear Integer Equalities and 
Inequalities. Proc. Amer. Math. Soc. 72 155-158. 
MATHEMATISCH INSTITUUT, UNIVERSITEIT VAN AMSTERDAM, ROETERSSTRAAT 15, 
1018 WB AMSTERDAM, THE NETHERLANDS 
